{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","NONE","sortType","setsortType","isReversed","setReverse","orderedGoods","goods","visibleGoods","sort","a","b","ALPHABET","localeCompare","LENGTH","length","Error","reverse","gerOrderedGoods","isListReversed","className","type","classNames","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAoCE,IAAME,EAAgB,WAC3B,MAAgCC,mBAAmBH,EAASI,MAA5D,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAiCH,oBAAS,GAA1C,mBAAOI,EAAP,KAAmBC,EAAnB,KAmBMC,EAnDR,SACEC,EACAL,EACAE,GAEA,IAAMI,EAAY,YAAOD,GAsBzB,OApBAC,EAAaC,MAAK,SAACC,EAAGC,GACpB,OAAQT,GACN,KAAKL,EAASe,SACZ,OAAOF,EAAEG,cAAcF,GAEzB,KAAKd,EAASiB,OACZ,OAAOJ,EAAEK,OAASJ,EAAEI,OAEtB,KAAKlB,EAASI,KACZ,OAAO,EAET,QACE,MAAM,IAAIe,MAAM,wBAIlBZ,GACFI,EAAaS,UAGRT,EAwBcU,CAAgBpB,EAAiBI,EAAUE,GAC1De,EAAiBjB,IAAaL,EAASI,MAAQG,EAErD,OACE,sBAAKgB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYpB,IAAaL,EAASe,WAEtCW,QA7BsB,WAC5BpB,EAAYN,EAASe,WAsBjB,iCAWA,wBACES,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYpB,IAAaL,EAASiB,SAEtCS,QApCkB,WACxBpB,EAAYN,EAASiB,SA6BjB,4BAWA,wBACEO,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAalB,IAEjBmB,QA3CiB,WACvBlB,GAAW,SAAAY,GAAO,OAAKA,MAoCnB,qBAWCE,GACC,wBACEE,KAAK,SACLD,UAAU,4BACVG,QAhDa,WACrBpB,EAAYN,EAASI,MACrBI,GAAW,IA2CL,sBAUJ,6BACGC,EAAakB,KAAI,SAAAC,GAAI,OACpB,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,YC5HnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.6d1b191b.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\nfunction gerOrderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((a, b) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return a.localeCompare(b);\n\n      case SortType.LENGTH:\n        return a.length - b.length;\n\n      case SortType.NONE:\n        return 0;\n\n      default:\n        throw new Error('Invalid sortType');\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setsortType] = useState<SortType>(SortType.NONE);\n  const [isReversed, setReverse] = useState(false);\n\n  const setSortAlphabetically = () => {\n    setsortType(SortType.ALPHABET);\n  };\n\n  const setSortTypeLength = () => {\n    setsortType(SortType.LENGTH);\n  };\n\n  const reverseGoodsList = () => {\n    setReverse(reverse => !reverse);\n  };\n\n  const resetGoodsList = () => {\n    setsortType(SortType.NONE);\n    setReverse(false);\n  };\n\n  const orderedGoods = gerOrderedGoods(goodsFromServer, sortType, isReversed);\n  const isListReversed = sortType !== SortType.NONE || isReversed;\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-info',\n            { 'is-light': sortType !== SortType.ALPHABET },\n          )}\n          onClick={setSortAlphabetically}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-success',\n            { 'is-light': sortType !== SortType.LENGTH },\n          )}\n          onClick={setSortTypeLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-warning',\n            { 'is-light': !isReversed },\n          )}\n          onClick={reverseGoodsList}\n        >\n          Reverse\n        </button>\n\n        {isListReversed && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={resetGoodsList}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {orderedGoods.map(good => (\n          <li key={good} data-cy=\"Good\">{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}